apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-controller-manager
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: dvls-kubernetes-operator
    app.kubernetes.io/part-of: dvls-kubernetes-operator
    control-plane: controller-manager
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "chart.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args: {{- toYaml .Values.controllerManager.kubeRbacProxy.args | nindent 8 }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        {{- if .Values.instanceSecret.caCert }}
        - name: SSL_CERT_FILE
          value: /etc/dvls-ca-cert/ca.crt
        {{- end }}
        image: {{ .Values.controllerManager.kubeRbacProxy.image.repository }}:{{ .Values.controllerManager.kubeRbacProxy.image.tag
          | default .Chart.AppVersion }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources: {{- toYaml .Values.controllerManager.kubeRbacProxy.resources | nindent
          10 }}
        securityContext: {{- toYaml .Values.controllerManager.kubeRbacProxy.containerSecurityContext
          | nindent 10 }}
      - args: {{- toYaml .Values.controllerManager.manager.args | nindent 8 }}
        command:
        - /manager
        env:
        - name: DEVO_OPERATOR_DVLS_APPID
          value: {{ quote .Values.controllerManager.manager.env.devoOperatorDvlsAppid }}
        - name: DEVO_OPERATOR_DVLS_BASEURI
          value: {{ quote .Values.controllerManager.manager.env.devoOperatorDvlsBaseuri
            }}
        - name: DEVO_OPERATOR_REQUEUE_DURATION
          value: {{ quote .Values.controllerManager.manager.env.devoOperatorRequeueDuration
            }}
        - name: DEVO_OPERATOR_DVLS_APPSECRET
          valueFrom:
            secretKeyRef:
              key: secret
              name: {{ include "chart.fullname" . }}-instance-secret
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        {{- if .Values.instanceSecret.caCert }}
        - name: SSL_CERT_FILE
          value: /etc/dvls-ca-cert/ca.crt
        {{- end }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag
          | default .Chart.AppVersion }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10
          }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext
          | nindent 10 }}
        {{- if .Values.instanceSecret.caCert }}
        volumeMounts:
        - name: dvls-ca-cert
          mountPath: /etc/dvls-ca-cert
          readOnly: true
        {{- end }}
      securityContext: {{- toYaml .Values.controllerManager.podSecurityContext | nindent
        8 }}
      serviceAccountName: {{ include "chart.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      {{- if .Values.instanceSecret.caCert }}
      volumes:
      - name: dvls-ca-cert
        secret:
          secretName: {{ include "chart.fullname" . }}-ca-cert
          items:
          - key: ca.crt
            path: ca.crt
      {{- end }}
